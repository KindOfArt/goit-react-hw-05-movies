{"version":3,"file":"static/js/654.df23b9a4.chunk.js","mappings":"wOAuCA,EAnCa,SAAAA,GACX,MCDa,SAAsBC,GACnC,OAA0BC,EAAAA,EAAAA,UAASD,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAASM,EAAvB,GAC9B,GAAE,CAACL,IAEG,CAACF,EAAOC,EAChB,CDRgBO,CAAa,IAArBD,GAAP,eAEA,OACE,yBACGA,EAAKE,OAAS,IACb,yBACGF,EAAKG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACfC,EAAS,OAAGD,QAAH,IAAGA,EAAAA,EAAgB,GAClC,OACE,4BACE,gBAAKE,UAAU,cAAf,SACGD,IACC,gBACEE,IAAG,yCAAoCF,GACvCG,MAAM,QACNC,OAAO,OACPC,IAAI,qBAIV,gBAAKJ,UAAU,OAAf,UACE,uBAAIH,QAZED,EAgBb,OAKV,C","sources":["components/Cast/Cast.jsx","hooks/useMovieCast.jsx"],"sourcesContent":["import useMovieCast from 'hooks/useMovieCast';\n\n// import PropTypes from 'prop-types';\n\nconst Cast = props => {\n  const [cast] = useMovieCast([]);\n\n  return (\n    <div>\n      {cast.length > 0 && (\n        <div>\n          {cast.map(({ id, name, profile_path }) => {\n            const castPhoto = profile_path ?? '';\n            return (\n              <div key={id}>\n                <div className=\"actor-photo\">\n                  {castPhoto && (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200${castPhoto}`}\n                      width=\"150px\"\n                      height=\"auto\"\n                      alt=\"Actor profile\"\n                    />\n                  )}\n                </div>\n                <div className=\"name\">\n                  <p>{name}</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nCast.propTypes = {};\n\nexport default Cast;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieActors } from 'API/moviesdbAPI';\n\nexport default function useMovieCast(defaultValue) {\n  const [state, setState] = useState(defaultValue);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieActors(movieId).then(({ cast }) => setState(cast));\n  }, [movieId]);\n\n  return [state, setState];\n}\n"],"names":["props","defaultValue","useState","state","setState","movieId","useParams","useEffect","getMovieActors","then","cast","useMovieCast","length","map","id","name","profile_path","castPhoto","className","src","width","height","alt"],"sourceRoot":""}